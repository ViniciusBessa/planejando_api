// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(40)
  email     String   @unique @db.VarChar(80)
  password  String   @db.VarChar(300)
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  revenues            Revenue[]
  goals               Goal[]
  expenses            Expense[]
  passwordResetTokens PasswordResetToken[]

  @@map("users")
}

model Expense {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  Int
  value       Decimal  @db.Decimal(16, 2)
  description String   @db.VarChar(200)
  date        DateTime @default(now())
  isEssential Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("expenses")
}

model Goal {
  id                Int      @id @default(autoincrement())
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId            Int
  category          Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId        Int
  value             Decimal  @db.Decimal(16, 2)
  essentialExpenses Boolean  @default(false)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("goals")
}

model Revenue {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  description String   @db.VarChar(200)
  value       Decimal  @db.Decimal(16, 2)
  date        DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("revenues")
}

model Category {
  id          Int      @id @default(autoincrement())
  title       String   @unique @db.VarChar(60)
  description String   @db.VarChar(200)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  goals    Goal[]
  expenses Expense[]

  @@map("categories")
}

model PasswordResetToken {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("password_reset_tokens")
}

enum Role {
  USER
  ADMIN
}
